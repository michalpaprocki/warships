<div class="bg-blue-500 flex lg:flex-row flex-col  gap-2 shadow-md shadow-black rounded-sm">
    
    

    <div class="md:p-4 p-2 text-sm flex lg:flex-col flex-row lg:justify-normal justify-between lg:items-start items-center gap-5">
        <div class="p-1 px-4">
            <div class="font-semibold capitalize pb-4">ships spawned:</div>

                <div class="flex justify-between py-1 text-xs">
                    <span>type</span>
                    <span>amount</span>
                </div>
                <%= for {k,v} <- @ships_on_board do %>
                    <div class="flex justify-between py-1 font-semibold">
                        <div class="flex gap-2 w-12 justify-between">
                            <span><%= k %>  </span>
                    <%= case k do %>
               <% :m1 ->      %>
               <span class="#{case k d} h-4 w-4 bg-violet-200" /> 
               <% :m2 ->      %>
               <span class="#{case k d} h-4 w-4 bg-violet-400" /> 
               <% :m3 ->      %>
               <span class="#{case k d} h-4 w-4 bg-violet-600" /> 
               <% :m4 ->      %>
               <span class="#{case k d} h-4 w-4 bg-violet-800" /> 

               <% end %>
                        </div>
                        <span><%= length(Map.to_list(v.ships)) %> / <%= v.max %>  </span>
                    </div>
                <% end %>
            <div class="p-4 ">
                <%= cond do %>
                    <% elem(Enum.at(Enum.filter(@game.players, fn {k,_v} -> k == String.to_atom(@nickname) end), 0), 1).ready -> %>
                        <button phx-click="toggle_ready" phx-target={@myself} class="bg-black text-white bg-stripes bg-1x1 hover:text-white hover:ring-2 hover:ring-black hover:scale-105 transition p-2 rounded-sm  uppercase font-semibold">cancel</button>

                    <% length(Map.to_list(@ships_on_board.m1.ships)) == @ships_on_board.m1.max && length(Map.to_list(@ships_on_board.m2.ships)) == @ships_on_board.m2.max && length(Map.to_list(@ships_on_board.m3.ships)) == @ships_on_board.m3.max && length(Map.to_list(@ships_on_board.m4.ships)) == @ships_on_board.m4.max  -> %>

                        <button phx-click="toggle_ready" phx-target={@myself} class="bg-black text-white hover:bg-white hover:text-black hover:ring-2 hover:ring-black hover:scale-105 animate-pulse hover:animate-none transition p-2 rounded-sm  uppercase font-semibold">Ready</button>

                    <% true -> %>

                        <button disabled class="p-2 bg-black/50 text-white uppercase font-semibold rounded-sm">Ready</button>
                <% end %>
        
            </div>
        </div>
        <div class="font-semibold capitalize p-1 px-4 flex flex-col gap-5">
            Opponent is :
            <%= if elem(Enum.at(Enum.filter(@game.players, fn {k,_v} -> k != String.to_atom(@nickname) end), 0), 1).ready do  %>
            <div class="font-semibold capitalize animate-pulse bg-white text-black p-4 text-center align-middle">Ready</div>
            <% else %>
            <div class="font-semibold capitalize p-4 text-center align-middle animate-none">Not Ready</div>
            <% end %>
            </div>

        </div>

    <div class="xl:w-[1000px] md:w-[750px] w-full h-[500px] grid grid-cols-10 grid-rows-10 gap-1 p-1 select-none transition">
      <%= for x <- @x_range do %>
        <%= for y <- @y_range do %>
        
            <%= case @phase do %>
                <% :first -> %>
                <%= cond do %>
                <% Enum.member?(List.flatten(Enum.map(@adjacent.m1, fn {_k,v} -> v  end)) , {to_string(x),to_string(y)}) ->    %>
                <div class=" ring-1  cursor-not-allowed bg-stripes bg-1x1" />
                <% Enum.member?(List.flatten(Enum.map(@adjacent.m2, fn {_k,v} -> v  end)) , {to_string(x),to_string(y)}) ->    %>
                <div class=" ring-1  cursor-not-allowed  bg-stripes bg-1x1" />
                <% Enum.member?(List.flatten(Enum.map(@adjacent.m3, fn {_k,v} -> v  end)) , {to_string(x),to_string(y)}) ->    %>
                <div class=" ring-1  cursor-not-allowed  bg-stripes bg-1x1" />
                <% Enum.member?(List.flatten(Enum.map(@adjacent.m4, fn {_k,v} -> v  end)) , {to_string(x),to_string(y)}) ->    %>
                <div class=" ring-1  cursor-not-allowed  bg-stripes bg-1x1" />
                 <% Enum.member?(List.flatten(Enum.map(@ships_on_board.m1.ships, fn {_k,v} -> v.coords  end)) , {to_string(x),to_string(y)}) ->    %>
                    <div phx-click="cancel_placement" phx-target={@myself} phx-value-class={"m1"} phx-value-x={x} phx-value-y={y} class="rounded-md transition text-sm uppercase font-semibold flex justify-center items-center hover:shadow-glow hover:shadow-red-500 ring-1 cursor-pointer bg-violet-200 ">
                        <%= x %> <%= y %>
                        
                    </div>
                    
                    <% Enum.member?(List.flatten(Enum.map(@ships_on_board.m2.ships, fn {_k,v} -> v.coords   end)) , {to_string(x),to_string(y)}) -> %>
                    <div phx-click="cancel_placement" phx-target={@myself} phx-value-class={"m2"} phx-value-x={x} phx-value-y={y} class="rounded-md transition text-sm uppercase font-semibold flex justify-center items-center hover:shadow-glow hover:shadow-red-500 ring-1 cursor-pointer bg-violet-400 ">
                        <%= x %> <%= y %>
                        
                    </div>
                    <% Enum.member?(List.flatten(Enum.map(@ships_on_board.m3.ships, fn {_k,v} -> v.coords   end)) , {to_string(x),to_string(y)}) -> %>
                    <div phx-click="cancel_placement" phx-target={@myself} phx-value-class={"m3"} phx-value-x={x} phx-value-y={y} 
                    class="rounded-md transition text-sm uppercase font-semibold flex justify-center items-center hover:shadow-glow hover:shadow-red-500 ring-1 cursor-pointer bg-violet-600 ">
                        <%= x %> <%= y %>
                        
                    </div>
                    <% Enum.member?(List.flatten(Enum.map(@ships_on_board.m4.ships, fn {_k,v} -> v.coords   end)) , {to_string(x),to_string(y)}) -> %>
                    <div phx-click="cancel_placement" phx-target={@myself} phx-value-class={"m4"} phx-value-x={x} phx-value-y={y} class="rounded-md transition text-sm uppercase font-semibold flex justify-center items-center hover:shadow-glow hover:shadow-red-500 ring-1 cursor-pointer bg-violet-800 ">
                        <%= x %> <%= y %>
                        
                    </div>
                    <% true-> %>
                        <div phx-click="select_start" phx-target={@myself} phx-value-x={x} phx-value-y={y} 
                        class="rounded-md text-gray-700 hover:text-black transition ring-1 text-sm uppercase font-semibold flex justify-center items-center cursor-pointer hover:shadow-glow hover:bg-emerald-500">
                            <%= x %> <%= y %>
                       
                        </div>
                    <% end %>
                    
                <% :second ->  %>
                        <%= cond do %>
                        <% Enum.member?(List.flatten(Enum.map(@adjacent.m1, fn {_k,v} -> v  end)) , {to_string(x),to_string(y)}) ->    %>
                        <div class=" ring-1  cursor-not-allowed  bg-stripes bg-1x1" />
      
                        <% Enum.member?(List.flatten(Enum.map(@adjacent.m2, fn {_k,v} -> v  end)) , {to_string(x),to_string(y)}) ->    %>
                        <div class=" ring-1  cursor-not-allowed  bg-stripes bg-1x1" />
   
                        <% Enum.member?(List.flatten(Enum.map(@adjacent.m3, fn {_k,v} -> v  end)) , {to_string(x),to_string(y)}) ->    %>
                        <div class=" ring-1  cursor-not-allowed  bg-stripes bg-1x1" />
                            
                            
                        <% Enum.member?(List.flatten(Enum.map(@adjacent.m4, fn {_k,v} -> v  end)) , {to_string(x),to_string(y)}) ->    %>
                        <div class=" ring-1  cursor-not-allowed  bg-stripes bg-1x1" />
                            
        
                        <% Enum.member?(List.flatten(Enum.map(@ships_on_board.m1.ships, fn {_k,v} -> v.coords  end)) , {to_string(x),to_string(y)}) ->    %>
                        <div  class="rounded-md transition text-sm uppercase font-semibold flex justify-center items-center hover:shadow-glow hover:shadow-red-500 ring-1 cursor-pointer bg-violet-200 ">
                            <%= x %> <%= y %>
                            
                        </div>
                        
                        <% Enum.member?(List.flatten(Enum.map(@ships_on_board.m2.ships, fn {_k,v} -> v.coords  end)) , {to_string(x),to_string(y)}) -> %>
                        <div class="rounded-md transition text-sm uppercase font-semibold flex justify-center items-center hover:shadow-glow hover:shadow-red-500 ring-1 cursor-pointer bg-violet-400 ">
                            <%= x %> <%= y %>
                            
                        </div>
                        <% Enum.member?(List.flatten(Enum.map(@ships_on_board.m3.ships, fn {_k,v} -> v.coords  end)) , {to_string(x),to_string(y)}) -> %>
                        <div class="rounded-md transition text-sm uppercase font-semibold flex justify-center items-center hover:shadow-glow hover:shadow-red-500 ring-1 cursor-pointer bg-violet-600 ">
                            <%= x %> <%= y %>
                            
                        </div>
                        <% Enum.member?(List.flatten(Enum.map(@ships_on_board.m4.ships, fn {_k,v} -> v.coords  end)) , {to_string(x),to_string(y)}) -> %>
                        <div  class="rounded-md transition text-sm uppercase font-semibold flex justify-center items-center hover:shadow-glow hover:shadow-red-500 ring-1 cursor-pointer bg-violet-800 ">
                            <%= x %> <%= y %>
                            
                        </div>
                         <% Enum.member?(@selected_coords, {to_string(x),to_string(y)}) ->  %> 
               
                        <div phx-click="select_end" phx-target={@myself} phx-value-x={x} phx-value-y={y} class="rounded-md flex justify-center items-center text-sm uppercase font-semibold transition ring-1  cursor-pointer bg-emerald-500">
                            <%= x %> <%= y %>
                        </div>
                        <% true -> %>
                        <div phx-click="select_end" phx-target={@myself} phx-value-x={x} phx-value-y={y} class="rounded-md text-gray-700 hover:text-black transition ring-1 text-sm uppercase font-semibold flex justify-center items-center cursor-pointer hover:shadow-glow hover:bg-emerald-500">
                            <%= x %> <%= y %>
                        </div>
                    
           
                    <% end %>
                <% end %>
        <% end %>
      <% end %>
    </div>
  
  </div>
  